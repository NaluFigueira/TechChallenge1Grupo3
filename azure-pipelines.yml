pr: 
  branches:
    include:
      - '*'

variables:
  buildConfiguration: 'Release'
  releaseBranchName: 'release'
  dotnetSdkVersion: '8.0.202' 

stages: 
  - stage: 'Build'
    displayName: 'Build'
    jobs:
    - job: 'Build'
      displayName: 'Build Job'
      pool:
        name: Default

      steps:
        - task: UseDotNet@2
          displayName: 'Use .NET SDK $(dotnetSdkVersion)'
          inputs:
            packageType: 'sdk'
            version: '$(dotnetSdkVersion)'

        - task: DotNetCoreCLI@2
          displayName: 'Restore project'
          inputs:
            command: 'restore'
            projects: '**/*.csproj'

        - task: DotNetCoreCLI@2
          displayName: 'Build project'
          inputs:
            command: 'build'
            arguments: '--no-restore --configuration $(buildConfiguration)'
            projects: '**/*.csproj'

        - task: DotNetCoreCLI@2
          displayName: 'Publish project'
          inputs:
            command: 'publish'
            projects: '**/*.csproj'
            publishWebProjects: false
            arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
            zipAfterPublish: true

        - publish: '$(Build.ArtifactStagingDirectory)'
          artifact: drop

  - stage: 'Development'
    displayName: 'Deploy to the Development environment'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        pool:
          name: Default
        environment: development
        #variables:
          #- group: ''
        strategy: 
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop
                - script: |
                    echo Deployment to Development successful!
                  displayName: 'Deploy to Development'
  
  - stage: 'Staging'
    displayName: 'Deploy to the Staging environment'
    dependsOn: Development
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/stage')
    jobs:
      - deployment: Deploy
        pool:
          name: Default
        environment: staging
        #variables:
          #- group: ''
        strategy: 
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop
                - script: |
                    echo Deployment to Staging successful!
                  displayName: 'Deploy to Staging'

  - stage: 'Production'
    displayName: 'Deploy to the Production environment'
    dependsOn: Staging
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    jobs:
      - deployment: Deploy
        pool:
          name: Default
        environment: production
        #variables:
          #- group: ''
        strategy: 
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop
                - script: |
                    echo Deployment to Production successful!
                  displayName: 'Deploy to Production'